<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">


  <!--可以替代下面的处理器和映射器的配置-->
  <mvc:annotation-driven/>

  <!-- 使用组件扫描 -->
  <context:component-scan base-package="tech.jiangtao.springmvc.controller"/>

  <!-- 静态资源 解析 -->
  <mvc:resources location="/js/" mapping="/js/**" />

  <!-- 第三个 基于注解的处理器映射器 即支持@controller @requestMapping -->
  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>

  <!--配合拦截器-->
  <mvc:interceptors>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <bean class="tech.jiangtao.springmvc.interceptor.LoginHandlerIntercepter"/>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <bean class="tech.jiangtao.springmvc.interceptor.HandlerInterceptor1"/>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <bean class="tech.jiangtao.springmvc.interceptor.HandlerInterceptor2"/>
    </mvc:interceptor>
  </mvc:interceptors>

  <!-- 第三个 基于注解的处理器适配器  不要求实现接口，必须与上面的第三个映射器一期使用-->
  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    <!-- 在webBindingInitializer中注入自定义属性编辑器、自定义转换器 -->
    <property name="webBindingInitializer" ref="customBinder"/>
    <property name="messageConverters">
      <bean
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
    </property>
  </bean>

  <!-- 配置视图解析器 要求将jstl的包加入classpath-->
  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <!-- 配置视图的前缀和后缀 -->
    <property name="prefix" value="/WEB-INF/jsp/"/>
    <property name="suffix" value=".jsp"/>
  </bean>

  <!-- 文件上传 -->
  <bean id="multipartResolver"
      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- 设置上传文件的最大尺寸为5MB -->
    <property name="maxUploadSize" value="5242880"/>
  </bean>

  <!-- 自定义webBinder -->
  <bean id="customBinder"
      class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
    <!-- 使用converter进行参数转 -->
    <property name="conversionService" ref="conversionService" />
    <!-- 配置validator -->
    <property name="validator" ref="validator" />
  </bean>


  <!--统一的异常处理器-->
  <bean class="tech.jiangtao.springmvc.exception.CustomExceptionHandler"/>

  <!-- 转换器 -->
  <bean id="conversionService"
      class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    <property name="converters">
      <list>
        <bean class="tech.jiangtao.springmvc.controller.converter.CustomDateConverter" />
        <bean class="tech.jiangtao.springmvc.controller.converter.CustomStringTrimConverter" />
      </list>
    </property>
  </bean>

  <!-- 校验器 -->
  <bean id="validator"
      class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    <!-- 校验器 -->
    <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
    <!-- 指定校验使用的资源文件，如果不指定则默认使用classpath下的ValidationMessages.properties -->
    <property name="validationMessageSource" ref="messageSource" />
  </bean>
  <!-- 校验错误信息配置文件 -->
  <bean id="messageSource"
      class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <!-- 资源文件名 -->
    <property name="basenames">
      <list>
        <value>/WEB-INF/validation-messages.properties</value>
      </list>
    </property>
    <!-- 资源文件编码格式 -->
    <property name="fileEncodings" value="utf-8" />
    <!-- 对资源文件内容缓存时间，单位秒 -->
    <property name="cacheSeconds" value="120" />
  </bean>

</beans>